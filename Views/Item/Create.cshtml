@model lengkeng.Models.Item
@{
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
@section TitleSection{
    Create Item
}

@section HeaderSection{

    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate-vsdoc.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}
@section ContentBody{
    <div class="row">
        <div class="col-lg-12">
            <h1 class="page-header">Tạo mới một món ăn (đồ uống)</h1>
        </div>
        <!-- /.col-lg-12 -->
    </div>
    <!-- /.row -->
    <form action="/Item/Create" method="post" enctype="multipart/form-data">
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.CategoryId, new { htmlAttributes = new { @class = "form-control" } })*@
                    <select name="CategoryId" class="form-control">
                        @{
                            List<lengkeng.Models.Category> listCategory = (List<lengkeng.Models.Category>)ViewData["listCategory"];
                            if (listCategory.Count > 0)
                            {
                                foreach (var cat in listCategory)
                                {
                                    <option value="@cat.CategoryId">@cat.CategoryName</option>
                                }
                            }
                        }
                    </select>
                    @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ItemName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ItemName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ItemName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ItemInfo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <textarea name="ItemInfo" class="form-control" value="" rows="5" tyle="max-width: 280px; width: 100%;"></textarea>
                    @Html.ValidationMessageFor(model => model.ItemInfo, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2">Giá:</label>
                <div class="col-md-10">
                    <input type="number" min="0" class="form-control" name="UnitPrice" required> <span style="padding: 5px;">VND</span>
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2">Upload Ảnh:</label>
                <div class="col-md-10">
                    <input type="file" class="form-control" name="imageUpload" accept="image/*" required>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IsActive)
                        @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ItemStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.ItemStatus, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ItemStatus, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    </form>



    <div>
        @Html.ActionLink("Trở lại danh sách", "Index")
    </div>
}